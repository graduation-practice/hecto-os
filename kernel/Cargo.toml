[package]
edition = "2018"
name = "kernel"
version = "0.1.0"
# https://doc.rust-lang.org/nightly/cargo/reference/features.html#feature-resolver-version-2
# 避免构建依赖项启用了std功能，并且相同的依赖项用作no_std环境的常规依赖项时构建被破坏的问题
resolver = "2"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bitflags = { path = '../vendor/bitflags' }
buddy_system_allocator = { path = '../vendor/buddy_system_allocator' }
cstr_core = { path = '../vendor/cstr_core' }
hashbrown = { path = '../vendor/hashbrown' } # 更快的 HashMap
lazy_static = { path = '../vendor/lazy_static', features = ["spin_no_std"] }
log = { path = '../vendor/log' }
riscv = { path = "../vendor/riscv", features = ["inline-asm"] }
spin = { path = '../vendor/spin' } # 自旋锁
virtio-drivers = { path = '../vendor/virtio-drivers' }
xmas-elf = { path = '../vendor/xmas-elf' } # 解析 elf

algorithm = { path = 'src/algorithm' }
core_io = { path = "../core_io", features = ["collections"] }
fatfs = { path = "../fatfs" } # fat 32 文件系统
# k210-hal = { path = "../k210-hal" }
# k210-pac = { path = "../k210-pac" }
# k210-soc = { path = "../k210-soc" }

[features]
board_k210 = []
board_qemu = []
default = ["board_qemu"]

[profile.dev]
lto = "thin"
opt-level = 3

[profile.release]
codegen-units = 1
lto = true
opt-level = 'z'
